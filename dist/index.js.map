{"version":3,"file":"index.js","sources":["../src/Tooltip/index.js","../src/Popover/index.js","../src/DropdownMenu/ButtonDropdownMenu.js","../src/DropdownMenu/DropdownLoader.js","../src/DropdownMenu/IconDropdownMenu.js","../src/DropdownMenu/DropdownItem.js"],"sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Tooltip } from '@progress/kendo-react-tooltip';\r\n\r\nclass TooltipComponent extends React.Component {\r\n  defaultRender = () => {\r\n    const { text, textBottom } = this.props;\r\n    return (\r\n      <Fragment>\r\n        <span className=\"vg-tooltip__hint_text\">{text}</span>\r\n        <span className=\"vg-tooltip__hint_textBottom\">{textBottom}</span>\r\n      </Fragment>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { children, customRender, position } = this.props;\r\n    return (\r\n      <Tooltip\r\n        anchorElement=\"target\"\r\n        content={customRender || this.defaultRender}\r\n        position={position || 'right'}\r\n        openDelay={10}\r\n      >\r\n        {children}\r\n      </Tooltip>\r\n    );\r\n  }\r\n\r\n  static propTypes = {\r\n    children: PropTypes.oneOfType([PropTypes.element, PropTypes.arrayOf(PropTypes.element)])\r\n      .isRequired,\r\n    text: PropTypes.string,\r\n    textBottom: PropTypes.string,\r\n    customRender: PropTypes.func,\r\n    position: PropTypes.string,\r\n  };\r\n\r\n  static defaultProps = {\r\n    text: '',\r\n    textBottom: '',\r\n  };\r\n}\r\n\r\nexport default TooltipComponent;\r\n","import React, { Component, Fragment, createRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport get from 'lodash/get';\n\nimport TooltipComponent from '../Tooltip';\n\nconst EVENTS = ['click', 'touchend'];\nexport const POSITION = {\n  LEFT: 'left',\n  RIGHT: 'right',\n};\nexport default class PopoverControl extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      isOpened: this.isOpened(),\n    };\n    this.controlRef = createRef();\n  }\n\n  isControlled = () => this.props.isOpened !== undefined;\n\n  componentDidMount() {\n    this.handleEventListeners();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.props.isOpened !== prevProps.isOpened || this.state.isOpened !== prevState.isOpened) {\n      this.handleEventListeners();\n    }\n  }\n\n  componentWillUnmount() {\n    this.removeEvents();\n  }\n\n  addEvents = () => {\n    EVENTS.forEach(event => document.addEventListener(event, this.handleDocumentClick, true));\n  };\n\n  removeEvents = () => {\n    EVENTS.forEach(event => document.removeEventListener(event, this.handleDocumentClick, true));\n  };\n\n  handleEventListeners = () => {\n    if (this.isOpened()) {\n      this.addEvents();\n    } else {\n      this.removeEvents();\n    }\n  };\n\n  setIsOpened = isOpened => {\n    if (this.isControlled()) {\n      this.props.onIsOpenedChanged({ isOpened });\n    } else {\n      this.setState({ isOpened });\n    }\n  };\n\n  isOpened = () => this.isControlled() ?\n    this.props.isOpened :\n    get(this.state, 'isOpened', false);\n\n  handleDocumentClick = ({ target }) => {\n    if (\n      !this.controlRef.current.contains(target) &&\n      document.body.querySelector('#root').contains(target)\n    ) {\n      this.onToggle();\n    }\n  };\n\n  onToggle = () => this.setIsOpened(!this.isOpened());\n\n  renderControlButtonContent = () => {\n    const { title, icon, iconPosition } = this.props;\n    const { LEFT, RIGHT } = POSITION;\n\n    if (iconPosition === LEFT) {\n      return (\n        <Fragment>\n          {icon}\n          {title}\n        </Fragment>\n      );\n    }\n\n    if (iconPosition === RIGHT) {\n      return (\n        <Fragment>\n          {title}\n          {icon}\n        </Fragment>\n      );\n    }\n\n    return title;\n  };\n\n  renderPopoverBody = () => {\n    if (!this.isOpened()) {\n      return null;\n    }\n\n    const { popoverBodyClassName, popoverBodyStyles, children } = this.props;\n    const { offsetLeft, offsetWidth, offsetParent: { clientWidth } } = this.controlRef.current;\n    const visibleWidthPopover = clientWidth - (offsetLeft + offsetWidth);\n    if (visibleWidthPopover < popoverBodyStyles.width) {\n      popoverBodyStyles.right = '0px';\n    }\n\n    return (\n      <div\n        className={classNames('vg-popover__body', popoverBodyClassName)}\n        style={popoverBodyStyles}\n      >\n        {children}\n      </div>\n    );\n  };\n\n  renderButton = () => {\n    const {\n      isHighlighted,\n      disabled,\n      buttonClassName,\n      activeButtonClassName,\n      tooltip,\n      title,\n    } = this.props;\n\n    const popoverButtonClassNames = classNames(\n      buttonClassName,\n      { [activeButtonClassName]: this.isOpened() || isHighlighted },\n    );\n    return (\n      <button\n        className={popoverButtonClassNames}\n        type=\"button\"\n        onClick={this.onToggle}\n        title={tooltip ? title : ''}\n        disabled={disabled}\n      >\n        {this.renderControlButtonContent()}\n      </button>\n    );\n  };\n\n  render() {\n    const {\n      className,\n      dataSelenium,\n      tooltip,\n      description,\n      owner,\n    } = this.props;\n\n    const popoverClassNames = classNames(\n      'vg-popover',\n      className,\n    );\n\n    return (\n      <div\n        ref={this.controlRef}\n        className={popoverClassNames}\n        data-selenium={dataSelenium}\n      >\n        { tooltip\n          ? <TooltipComponent text={description} textBottom={owner}>\n            {this.renderButton()}\n          </TooltipComponent>\n          : this.renderButton()\n        }\n        {this.renderPopoverBody()}\n      </div>\n    );\n  }\n\n  static propTypes = {\n    className: PropTypes.string,\n    popoverBodyClassName: PropTypes.string,\n    buttonClassName: PropTypes.string,\n    activeButtonClassName: PropTypes.string,\n    icon: PropTypes.element,\n    iconPosition: PropTypes.oneOf([POSITION.LEFT, POSITION.RIGHT]),\n    title: PropTypes.string.isRequired,\n    isHighlighted: PropTypes.bool,\n    disabled: PropTypes.bool,\n    popoverBodyStyles: PropTypes.object,\n    dataSelenium: PropTypes.string,\n    isOpened: PropTypes.bool,\n    onIsOpenedChanged: PropTypes.func,\n    tooltip: PropTypes.bool,\n    description: PropTypes.string,\n    owner: PropTypes.string,\n  };\n\n  static defaultProps = {\n    className: '',\n    icon: null,\n    iconPosition: POSITION.LEFT,\n    isHighlighted: false,\n    disabled: false,\n    popoverBodyStyles: {},\n    onIsOpenedChanged: () => {},\n    buttonClassName: 'vg-popover__button',\n    popoverBodyClassName: '',\n    activeButtonClassName: 'vg-popover__button_active',\n    tooltip: false,\n    description: '',\n    owner: '',\n  };\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport ArrowDownIcon from '../assets/icons/controls/ic_arrow_down_small.svg';\nimport PopoverControl, { POSITION } from '../Popover';\n\nexport class ButtonDropdownMenuComponent extends React.Component {\n  state = {\n    isOpened: false,\n  };\n\n  isDisabled = () => {\n    const { disabled, disableIfEmpty, children } = this.props;\n\n    if (disabled !== undefined) {\n      return disabled;\n    }\n\n    if (disableIfEmpty) {\n      return React.Children.count(children) === 0;\n    }\n\n    return false;\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({ isOpened: !prevState.isOpened }));\n  };\n\n  changeIsOpened = ({ isOpened }) => {\n    if (!this.isDisabled()) {\n      this.setState({ isOpened });\n    }\n  };\n\n  render() {\n    const { title, wrapperClassName, children } = this.props;\n    const { isOpened } = this.state;\n\n    return (\n      <PopoverControl\n        title={title}\n        className={wrapperClassName}\n        popoverBodyClassName=\"vg-dropdown-menu__body\"\n        buttonClassName=\"vg-button vg-button_submit vg-dropdown-menu__control vg-dropdown-menu__control__button\"\n        activeButtonClassName=\"vg-dropdown-menu__control__button--active\"\n        icon={<img src={ArrowDownIcon} alt={`${title}}`} />}\n        iconPosition={POSITION.RIGHT}\n        isOpened={isOpened}\n        disabled={this.isDisabled()}\n        onIsOpenedChanged={this.changeIsOpened}\n      >\n        {React.Children.map(children, child => React.cloneElement(child, { toggle: this.toggle }))}\n      </PopoverControl>\n    );\n  }\n\n  static propTypes = {\n    title: PropTypes.string.isRequired,\n    disableIfEmpty: PropTypes.bool,\n    wrapperClassName: PropTypes.string,\n    disabled: PropTypes.bool, // intended to be undefined by default\n  };\n\n  static defaultProps = {\n    disableIfEmpty: false,\n    wrapperClassName: '',\n  };\n}\n\nexport const ButtonDropdownMenu = ButtonDropdownMenuComponent;\n","import React from 'react';\r\n\r\nexport const DropdownLoader = () => (\r\n  <div className=\"vg-dropdown-menu__loader-container\">\r\n    <div className=\"k-loading-image\" />\r\n  </div>\r\n);\r\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\nimport PopoverControl from '../Popover';\nimport { DropdownLoader } from './DropdownLoader';\n\nexport class IconDropdownMenu extends Component {\n  state = {\n    isOpened: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    // Dropdown menu was opened\n    if (!prevState.isOpened && this.state.isOpened) {\n      this.props.onOpen();\n    }\n\n    // Dropdown menu was closed\n    if (prevState.isOpened && !this.state.isOpened) {\n      this.props.onClose();\n    }\n  }\n\n  getIconSrc = () => {\n    const { disabled, iconSrc, disabledIconSrc } = this.props;\n\n    if (disabled && disabledIconSrc) {\n      return disabledIconSrc;\n    }\n\n    return iconSrc;\n  };\n\n  getButtonClassName = () => {\n    const { disabled, disabledIconSrc } = this.props;\n\n    return classNames(\n      'vg-icon-button',\n      'vg-dropdown-menu__control',\n      'vg-dropdown-menu__control__icon',\n      { 'vg-icon-button--disabled': disabled && disabledIconSrc === undefined },\n    );\n  };\n\n  toggle = () => {\n    this.setState(prevState => ({ isOpened: !prevState.isOpened }));\n  };\n\n  changeIsOpened = ({ isOpened }) => {\n    if (!this.props.disabled) {\n      this.setState({ isOpened });\n    }\n  };\n\n  render() {\n    const { iconAlt, children, disabled, loading } = this.props;\n    const { isOpened } = this.state;\n\n    return (\n      <PopoverControl\n        title=\"\"\n        popoverBodyClassName=\"vg-dropdown-menu__body\"\n        className=\"d-inline-block\"\n        buttonClassName={this.getButtonClassName()}\n        activeButtonClassName=\"vg-dropdown-menu__control__icon--active\"\n        icon={<img src={this.getIconSrc()} alt={iconAlt} />}\n        isOpened={isOpened}\n        disabled={disabled}\n        onIsOpenedChanged={this.changeIsOpened}\n      >\n        {loading ? (\n          <DropdownLoader />\n        ) : (\n          React.Children.map(children, child => React.cloneElement(child, { toggle: this.toggle }))\n        )}\n      </PopoverControl>\n    );\n  }\n\n  static propTypes = {\n    iconSrc: PropTypes.string.isRequired,\n    disabledIconSrc: PropTypes.string, // intended to be undefined by default\n    iconAlt: PropTypes.string.isRequired,\n    disabled: PropTypes.bool,\n    loading: PropTypes.bool,\n    onOpen: PropTypes.func,\n    onClose: PropTypes.func,\n  };\n\n  static defaultProps = {\n    disabled: false,\n    loading: false,\n    onOpen: () => {},\n    onClose: () => {},\n  };\n}\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nexport class DropdownItem extends React.Component {\r\n  className = 'vg-dropdown-menu__item';\r\n\r\n  getContainerClassName = () => {\r\n    return classNames(this.className, { [`${this.className}__disabled`]: this.props.disabled });\r\n  };\r\n\r\n  onClick = () => {\r\n    const { disabled, onClick, toggle } = this.props;\r\n\r\n    if (!disabled) {\r\n      onClick();\r\n      toggle();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { disabled, children } = this.props;\r\n\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className={this.getContainerClassName()}\r\n        onClick={disabled ? undefined : this.onClick}\r\n        disabled={disabled}\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  static propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    disabled: PropTypes.bool,\r\n  };\r\n\r\n  static defaultProps = {\r\n    disabled: false,\r\n  };\r\n}\r\n"],"names":["TooltipComponent","defaultRender","props","text","textBottom","React","children","customRender","position","Component","propTypes","PropTypes","oneOfType","element","arrayOf","isRequired","string","func","defaultProps","EVENTS","POSITION","PopoverControl","isControlled","isOpened","undefined","addEvents","forEach","document","addEventListener","event","handleDocumentClick","removeEvents","removeEventListener","handleEventListeners","setIsOpened","onIsOpenedChanged","setState","get","state","target","controlRef","current","contains","body","querySelector","onToggle","renderControlButtonContent","title","icon","iconPosition","LEFT","RIGHT","renderPopoverBody","popoverBodyClassName","popoverBodyStyles","offsetLeft","offsetWidth","clientWidth","offsetParent","visibleWidthPopover","width","right","classNames","renderButton","isHighlighted","disabled","buttonClassName","activeButtonClassName","tooltip","popoverButtonClassNames","createRef","prevProps","prevState","className","dataSelenium","description","owner","popoverClassNames","oneOf","bool","object","ButtonDropdownMenuComponent","isDisabled","disableIfEmpty","Children","count","toggle","changeIsOpened","wrapperClassName","ArrowDownIcon","map","cloneElement","child","ButtonDropdownMenu","DropdownLoader","IconDropdownMenu","getIconSrc","iconSrc","disabledIconSrc","getButtonClassName","onOpen","onClose","iconAlt","loading","DropdownItem","getContainerClassName","onClick"],"mappings":"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"}